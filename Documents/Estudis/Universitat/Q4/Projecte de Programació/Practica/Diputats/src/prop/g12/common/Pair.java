package prop.g12.common;

/**
 * @author Andr√©s Correa Casablanca
 */
abstract public class Pair<T1, T2> {
    protected T1 v1;
    protected T2 v2;

    protected Pair(T1 v1, T2 v2) {
        this.v1 = v1;
        this.v2 = v2;
    }

    public T1 getFirst() {
        return v1;
    }

    public T2 getSecond() {
        return v2;
    }

    /**
     * Autogenerated equals method.
     * {@inheritDoc}
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ImmutablePair)) return false;

        ImmutablePair<?, ?> pair = (ImmutablePair<?, ?>) o;

        if (v1 != null ? !v1.equals(pair.v1) : pair.v1 != null) return false;
        return !(v2 != null ? !v2.equals(pair.v2) : pair.v2 != null);

    }

    /**
     * Autogenerated hashCode method. See Object's documentation.
     * {@inheritDoc}
     */
    @Override
    public int hashCode() {
        int result = v1 != null ? v1.hashCode() : 0;
        result = 31 * result + (v2 != null ? v2.hashCode() : 0);
        return result;
    }
}
